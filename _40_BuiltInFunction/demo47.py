# -*- coding: UTF-8 -*-
# author: chenyongjun

'''
数字格式化
    str.format() 格式化数字的多种方法
    ^, <, > 分别是居中、左对齐、右对齐，后面带宽度， : 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充
    + 表示在正数前显示 +，负数前显示 -；  （空格）表示在正数前加空格
    b、d、o、x 分别是二进制、十进制、八进制、十六进制
'''
if __name__ == "__main__":
    # 保留小数点后两位，格式：{:.2f}
    print("{:.2f}".format(3.1415926))

    # 带符号保留小数点后两位，格式：{:+.2f}
    print("{:+.2f}".format(3.1415926))

    # 带符号保留小数点后两位，格式：{:+.2f}
    print("{:+.2f}".format(-1))

    # 不带小数，格式：{:.0f}
    print("{:.0f}".format(2.71828))

    # 数字补零 (填充左边, 宽度为2)， 格式：{:0>2d}
    print("{:0>2d}".format(5))
    # 数字补x (填充右边, 宽度为4)，格式：{:x<4d}
    print("{:x<4d}".format(5))
    # 数字补x (填充右边, 宽度为4)，格式：{:x<4d}
    print("{:x<4d}".format(10))

    # 以逗号分隔的数字格式，格式：	{:,}
    print("{:,}".format(1000000))

    # 百分比格式，格式：	{:.2%}
    print("{:.2%}".format(0.25))

    # 指数记法，格式：{:.2e}
    print("{:.2e}".format(1000000000))

    # 右对齐 (默认, 宽度为10)，格式：{:>10d}
    print("{:>10d}".format(13))
    # 左对齐 (宽度为10)，格式：{:<10d}
    print("{:<10d}".format(13))
    # 中间对齐 (宽度为10)，格式：{:^10d}
    print("	{:^10d}".format(13))

    # 进制
    # 二进制
    print("{:b}".format(11))
    # 十进制
    print("{:d}".format(11))
    # 八进制
    print("{:o}".format(11))
    print("{:x}".format(11))
    # 十六进制
    print("{:#x}".format(11))
    print("{:#X}".format(11))

    # 可以使用大括号 {} 来转义大括号
    print("{} 对应的位置是 {{0}}".format("runoob"))
